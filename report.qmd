---
title: "Line Table"
format:
  html:
    self-contained: false
    embed-resources: false
    toc: false
execute:
  echo: false
  enabled: true
jupyter: python3
---


```{python,echo=False}
import panel as pn
import pandas as pd

pn.extension("tabulator")

# Load and rename
dfF = pd.read_csv("ForwardLinesClean.csv")
dfD = pd.read_csv("DpairsClean.csv")



rename_dict = {
    "time_up_3": "Time Spent up 3",
    "time_up_2": "Time Spent up 2",
    "time_up_1": "Time Spent up 1",
    "time_tied": "Time spent tied",
    "time_down_1": "Time Spent down 1",
    "time_down_2": "Time Spent down 2",
    "time_down_3": "Time Spent down 3",
    "total_duration": "Total TOI (Min)",
    "total_dz_start": "DZ Starts",
    "total_oz_start": "OZ Starts",
    "total_shots_for_per60": "Shot Att For/60",
    "total_shots_against_per60": "Shot Att Against/60",
    "total_goals_for_per60": "GF/60",
    "total_goals_against_per60": "GA/60",
    "ShotAtt%": "Shot Att%",
    "GF%": "GF%",
    "SC%": "Scoring Chance%"
}

rename_dictD = {
    "time_up_3": "Time Spent up 3",
    "time_up_2": "Time Spent up 2",
    "time_up_1": "Time Spent up 1",
    "time_tied": "Time spent tied",
    "time_down_1": "Time Spent down 1",
    "time_down_2": "Time Spent down 2",
    "time_down_3": "Time Spent down 3",
    "total_duration": "Total TOI (Min)",
    "total_dz_start": "DZ Starts",
    "total_oz_start": "OZ Starts",
    "total_shots_for_per60": "Shot Att For/60",
    "total_shots_against_per60": "Shot Att Against/60",
    "total_goals_for_per60": "GF/60",
    "total_goals_against_per60": "GA/60",
    "ShotAtt%": "Shot Att%",
    "GF%": "GF%",
    "SC%": "Scoring Chance%"
}

dfF.rename(columns=rename_dict, inplace=True)
dfD.rename(columns=rename_dictD, inplace=True)


# Select key columns
priority_colsF = [
    "F1", "F2", "F3",
    "Total TOI (Min)",
    "Shot Att%",
    "GF%",
    "Scoring Chance%",
    "GF/60",
    "GA/60",
    "Shot Att For/60",
    "Shot Att Against/60"
]




useagecolsF = [
    "F1","F2","F3",
    "Time Spent up 3",
    "Time Spent up 2",
    "Time Spent up 1",
    "Time spent tied",
    "Time Spent down 1",
    "Time Spent down 2",
    "Time Spent down 3",
    "Total TOI (Min)",
    "DZ Starts",
    "OZ Starts"
]

priority_colsD = [
    "D1","D2",
    "Total TOI (Min)",
    "Shot Att%",
    "GF%",
    "Scoring Chance%",
    "GF/60",
    "GA/60",
    "Shot Att For/60",
    "Shot Att Against/60"
]

useagecolsD = [
    "D1", "D2",
    "Time Spent up 3",
    "Time Spent up 2",
    "Time Spent up 1",
    "Time spent tied",
    "Time Spent down 1",
    "Time Spent down 2",
    "Time Spent down 3",
    "Total TOI (Min)",
    "DZ Starts",
    "OZ Starts"
]


dfF_stats = dfF[priority_colsF]
dfF_use = dfF[useagecolsF]

dfD_stats = dfD[priority_colsD]
dfD_use = dfD[useagecolsD]

# Show as Tabulator table (sortable/searchable by default)
# Create the Tabulator table
# Use .panel() to ensure rendering in Quarto

# Display everything with frozen columns

# Final layout
pn.panel(
    pn.Column(
        pn.pane.Markdown("## Forward Line Stats"),
        pn.widgets.Tabulator(
            dfF_stats,
            show_index=False,
            sizing_mode="stretch_width",
            frozen_columns=['F1', 'F2', 'F3']
        ),

        pn.pane.Markdown("## Forward Line Usage"),
        pn.widgets.Tabulator(
            dfF_use,
            show_index=False,
            sizing_mode="stretch_width",
            frozen_columns=['F1', 'F2', 'F3']
        ),

        pn.pane.Markdown("## D-Pair Stats"),
        pn.widgets.Tabulator(
            dfD_stats,
            show_index=False,
            sizing_mode="stretch_width",
            frozen_columns=['D1', 'D2']
        ),

        pn.pane.Markdown("## D-Pair Usage"),
        pn.widgets.Tabulator(
            dfD_use,
            show_index=False,
            sizing_mode="stretch_width",
            frozen_columns=['D1', 'D2']
        )
    )
).servable()






```









